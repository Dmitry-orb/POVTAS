@model POVTAS_OSU.Models.ChairConsist

@{
    ViewBag.Title = "Edit";
    List<POVTAS_OSU.Models.Discipline> disciplines = ViewBag.DiscilineList;
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ChairConsist</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatronymicName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PatronymicName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PatronymicName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkExperience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkExperience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkExperience, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityId, "ActivityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ActivityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActivityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AcademicTitleId, "AcademicTitleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AcademicTitleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AcademicTitleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AcademicDegreeId, "AcademicDegreeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AcademicDegreeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AcademicDegreeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PositionId, "PositionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PositionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChairId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChairId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChairId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="chapters" class="form-group">
            @foreach (var item in Model.Disciplines)
            {
                <div class="form-group">
                    <div class="col-md-2">
                        <input type="button" id="delete_new_сhapter" onclick="this.parentNode.parentNode.remove()" value="Удалить дисциплину" />
                    </div>
                    <div class="col-md-10">
                        <select class="form-control" name="sel">
                            <option value="@item.Id">@item.Title</option>
                            @foreach (var item2 in disciplines)
                            {
                                if (item2.Id != item.Id)
                                {
                                    <option value="@item2.Id">@item2.Title</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            }
        </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" id="add_new_сhapter" onclick="press()" value="Добавить дисциплину" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    function press() {
        let div = document.createElement('div');
        var html2Add = '<div class="form-group"><div class="col-md-2"><input type="button" id="delete_new_сhapter" onclick="this.parentNode.parentNode.remove()" value="Удалить дисциплину" /></div><div class="col-md-10"><select class="form-control" name="sel"><option value = "0" > --не-выбрано--</option>@foreach (var item in disciplines){<option value="@item.Id">@item.Title</option>}</select> </div>';
        div.innerHTML = html2Add;
        chapters.append(div);
    };
</script>
